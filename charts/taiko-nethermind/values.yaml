# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nethermindeth/nethermind
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "taiko-b8f32a5"

# This is the full list of supported configuration, for additional configuration add env vars to the `env` list or `extraArgs`.
# Reference: https://docs.nethermind.io/fundamentals/configuration#environment-variables
config:
  NETHERMIND_CONFIG: "taiko-hekla"
  NETHERMIND_JSONRPCCONFIG_ENABLED: "true"
  NETHERMIND_JSONRPCCONFIG_ENABLEDMODULES: "Web3,Eth,Net,Subscribe,Health"
  NETHERMIND_JSONRPCCONFIG_HOST: "0.0.0.0"
  NETHERMIND_JSONRPCCONFIG_JWTSECRETFILE: /shared/jwtsecret
  NETHERMIND_JSONRPCCONFIG_ENGINEHOST: "0.0.0.0"
  NETHERMIND_JSONRPCCONFIG_ENGINEENABLEDMODULES: "Web3,Eth,Net,Subscribe,Health"
  NETHERMIND_HEALTHCHECKSCONFIG_ENABLED: "true"
  NETHERMIND_HEALTHCHECKSCONFIG_LOWSTORAGESPACESHUTDOWNTHRESHOLD: "0"

env: []
  # - name: NETHERMIND_OTHER_CONFIG
  #   value: ""

command:
  - /nethermind/Nethermind.Runner
  - --Metrics.NodeName=$POD_NAME
  - --Network.ExternalIp=$EXTERNAL_NODE_IP
  - --Network.P2PPort=$EXTERNAL_NODE_PORT
  - --Network.DiscoveryPort=$EXTERNAL_NODE_PORT

args:
  - --datadir=/data/execution
extraArgs: []

secrets:
  jwtsecret: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    # JsonRPC Port
    http: 8545
    # JsonRPC WebSockets Port
    ws: 8546
    # Engine Port
    authrpc: 8551
    # P2P Port
    p2p: 30313
    # Metrics Port
    metrics: 8008

resources: {}

persistence:
  enabled: false
  storageClassName: ""
  mountPath: /data/execution
  accessModes:
    - ReadWriteOnce
  size: 50Gi

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

metrics:
  enabled: true
  serviceMonitor:
    # -- If true, a ServiceMonitor CRD is created for a prometheus operator. https://github.com/coreos/prometheus-operator
    enabled: false
    # -- Path to scrape
    path: /metrics
    # -- Alternative namespace for ServiceMonitor
    namespace: null
    # -- Additional ServiceMonitor labels
    labels: {}
    # -- Additional ServiceMonitor annotations
    annotations: {}
    # -- ServiceMonitor scrape interval
    interval: 1m
    # -- ServiceMonitor scheme
    scheme: http
    # -- ServiceMonitor TLS configuration
    tlsConfig: {}
    # -- ServiceMonitor scrape timeout
    scrapeTimeout: 30s
    # -- ServiceMonitor relabelings
    relabelings: []

##########################
# InitContainers
##########################
initContainer:
  image:
    repository: bitnami/kubectl
    tag: 1.28
extraInitContainers: []

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

nodeSelector: {}

tolerations: []

affinity: {}

rbac:
  create: true

extraObjects: []
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     name: '{{ include "fullnode.fullname" . }}'
#   stringData:
#     SECRET_KEY: "<SECRET_VALUE>"
