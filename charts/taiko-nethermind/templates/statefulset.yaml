---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "taiko-nethermind.fullname" . }}
  labels:
    {{- include "taiko-nethermind.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "taiko-nethermind.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "taiko-nethermind.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "taiko-nethermind.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "taiko-nethermind.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command: ["sh", "-c", "/scripts/init.sh"]
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: shared
              mountPath: /shared
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: nethermind
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - >
              echo "Starting nethermind client...";
              . /shared/env;
              echo "EXTERNAL_NODE_IP=${EXTERNAL_NODE_IP}";
              echo "EXTERNAL_NODE_PORT=${EXTERNAL_NODE_PORT}";
              {{- include "taiko-nethermind.defaultCommand" . | nindent 14 }}
          ports:
            - name: exec-http
              containerPort: {{ .Values.service.ports.http }}
              protocol: TCP
            - name: exec-ws
              containerPort: {{ .Values.service.ports.ws }}
              protocol: TCP
            - name: exec-authrpc
              containerPort: {{ .Values.service.ports.authrpc }}
              protocol: TCP
            - name: exec-p2p-tcp
              containerPort: {{ .Values.service.ports.p2p }}
              protocol: TCP
            - name: exec-p2p-udp
              containerPort: {{ .Values.service.ports.p2p }}
              protocol: UDP
            - name: exec-metrics
              containerPort: {{ .Values.service.ports.metrics }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: shared
              mountPath: /shared
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: shared
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ include "taiko-nethermind.fullname" . }}-scripts
            defaultMode: 0755
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  {{- if or .Values.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        labels:
          {{- include "taiko-nethermind.labels" . | nindent 10 }}
      spec:
        storageClassName: {{ .Values.persistence.storageClassName | quote }}
        accessModes: {{- .Values.persistence.accessModes | toYaml | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
